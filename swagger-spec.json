{"openapi":"3.0.0","paths":{"/api/achievements/operations":{"get":{"operationId":"AchievementsController_getOperations","summary":"Can access: curator","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"filter.type","required":false,"in":"query","description":"Filter by type query param.\n          <p>\n             <b>Format: </b> filter.type={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.type=$not:$like:John Doe&filter.type=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.executor.(uuid)","required":false,"in":"query","description":"Filter by executor.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.executor.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.executor.(uuid)=$not:$like:John Doe&filter.executor.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.student.(uuid)","required":false,"in":"query","description":"Filter by student.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.student.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.student.(uuid)=$not:$like:John Doe&filter.student.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.achievement.(uuid)","required":false,"in":"query","description":"Filter by achievement.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.achievement.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.achievement.(uuid)=$not:$like:John Doe&filter.achievement.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> createdAt:DESC\n          </p>\n      <h4>Available Fields</h4><ul><li>createdAt</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["createdAt:ASC","createdAt:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/AchievementOperationDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{"type":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"executor.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"student.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"achievement.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}}}}]}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements":{"get":{"operationId":"AchievementsController_getAchievements","summary":"Get achievements for the authenticated user","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AchievementDto"}}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/achievements":{"get":{"operationId":"AchievementsController_getAchievementForUser","summary":"Get achievements for the authenticated user\nCan access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AchievementDto"}}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/achievements/unlocked":{"get":{"operationId":"AchievementsController_getUnlockedAchievementsForUser","summary":"Can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssuedAchievementDto"}}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements/me/unlocked":{"get":{"operationId":"AchievementsController_getUnlockedAchievements","summary":"Can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssuedAchievementDto"}}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements/issue":{"post":{"operationId":"AchievementsController_issueAchievement","summary":"Can access: sputnik, curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueAchievementDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssuedAchievementDto"}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements/cancel":{"delete":{"operationId":"AchievementsController_cancelIssuing","summary":"Can access: sputnik, curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CancelAchievementDto"}}}},"responses":{"200":{"description":""}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements/me/issued-achievements/unseen":{"get":{"operationId":"AchievementsController_getUnseenAchievements","summary":"Can access student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssuedAchievementDto"}}}}}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/achievements/me/issued/unseen/mark-as-seen":{"patch":{"operationId":"AchievementsController_markAsSeen","summary":"Can access student","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkAsSeenDto"}}}},"responses":{"200":{"description":""}},"tags":["Achievements"],"security":[{"bearer":[]}]}},"/api/students":{"post":{"operationId":"StudentsController_createStudent","summary":"can access: sputnik, curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStudentDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StudentDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/{uuid}":{"patch":{"operationId":"StudentsController_updateStudent","summary":"can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateStudentDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Students"],"security":[{"bearer":[]}]},"delete":{"operationId":"StudentsController_deleteStudent","summary":"can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/ban":{"patch":{"operationId":"StudentsController_banStudent","summary":"can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/unban":{"patch":{"operationId":"StudentsController_unbanStudent","summary":"can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/groups/{id}/students":{"get":{"operationId":"StudentsController_getStudentsByGroup","summary":"can access: sputnik, curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/students":{"get":{"operationId":"StudentsController_getStudentsByInstitute","summary":"can access: curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}},{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> No default sorting specified, the result order is not guaranteed\n          </p>\n      <h4>Available Fields</h4><ul><li>balance</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["balance:ASC","balance:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{}}}}}}]}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me":{"get":{"operationId":"StudentsController_getMe","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StudentWithSettingsDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me/groups/students":{"get":{"operationId":"StudentsController_getMyGroupsStudents","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/top":{"get":{"operationId":"StudentsController_getTopStudents","summary":"can access: all","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> No default sorting specified, the result order is not guaranteed\n          </p>\n      <h4>Available Fields</h4><ul><li>balance</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["balance:ASC","balance:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/TopStudentDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{}}}}}}]}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/groups/{id}/students/top":{"get":{"operationId":"StudentsController_getGroupsTopById","summary":"can access: all","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/students/top":{"get":{"operationId":"StudentsController_getInstitutesTopById","summary":"can access: all","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}},{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> No default sorting specified, the result order is not guaranteed\n          </p>\n      <h4>Available Fields</h4><ul><li>balance</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["balance:ASC","balance:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/TopStudentDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{}}}}}}]}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/top/me/groups":{"get":{"operationId":"StudentsController_getTopMyGroupsStudents","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopStudentDto"}}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/top/me/institutes":{"get":{"operationId":"StudentsController_getTopMyInstituteStudents","summary":"can access: student","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> No default sorting specified, the result order is not guaranteed\n          </p>\n      <h4>Available Fields</h4><ul><li>balance</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["balance:ASC","balance:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/TopStudentDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{}}}}}}]}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me/groups/rank":{"get":{"operationId":"StudentsController_getMyGroupRank","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RankDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me/institutes/rank":{"get":{"operationId":"StudentsController_getMyInstituteRank","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RankDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me/rank":{"get":{"operationId":"StudentsController_getMyRank","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RankDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/me/rank/all":{"get":{"operationId":"StudentsController_getAllMyRanks","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllRanksDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/rank/all":{"get":{"operationId":"StudentsController_getAllStudentRank","summary":"can access: sputnik, curator, admin","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AllRanksDto"}}}}},"tags":["Students"],"security":[{"bearer":[]}]}},"/api/sputniks":{"post":{"operationId":"SputniksController_createSputnik","summary":"can access: curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSputnikDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SputnikDto"}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/{uuid}":{"patch":{"operationId":"SputniksController_updateSputnik","summary":"can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSputnikDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/{uuid}/ban":{"patch":{"operationId":"SputniksController_banStudent","summary":"can access: curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/{uuid}/unban":{"patch":{"operationId":"SputniksController_unbanStudent","summary":"can access: curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/groups/{id}/sputniks":{"get":{"operationId":"SputniksController_getSputniksByGroup","summary":"can access: curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SputnikDto"}}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/sputniks":{"get":{"operationId":"SputniksController_getSputniksByInstitute","summary":"can access: curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SputnikDto"}}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/me":{"get":{"operationId":"SputniksController_getMe","summary":"can access: sputnik","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SputnikDto"}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/me/groups/{id}/students":{"get":{"operationId":"SputniksController_getMySputnikGroupsStudents","summary":"can access: sputnik","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/top/me/groups/{id}":{"get":{"operationId":"SputniksController_getMySputnikGroupsStudentsTop","summary":"can access: sputnik","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StudentDto"}}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/sputniks/top/me/institutes":{"get":{"operationId":"SputniksController_getMySputnikInstituteStudentsTop","summary":"can access: sputnik","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> No default sorting specified, the result order is not guaranteed\n          </p>\n      <h4>Available Fields</h4><ul><li>balance</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["balance:ASC","balance:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/SputnikDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{}}}}}}]}}}}},"tags":["Sputniks"],"security":[{"bearer":[]}]}},"/api/curators":{"post":{"operationId":"CuratorsController_createCurator","summary":"can access: admin only","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCuratorDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CuratorDto"}}}}},"tags":["Curators"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/curators":{"get":{"operationId":"CuratorsController_getCuratorsByInstitute","summary":"can access: curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CuratorDto"}}}}}},"tags":["Curators"],"security":[{"bearer":[]}]}},"/api/curators/me":{"get":{"operationId":"CuratorsController_getMe","summary":"can access: curator","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CuratorDto"}}}}},"tags":["Curators"],"security":[{"bearer":[]}]}},"/api/groups":{"post":{"operationId":"GroupsController_create","summary":"can access: sputnik, curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGroupDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupDto"}}}}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/groups/add-sputnik":{"post":{"operationId":"GroupsController_addSputnikToGroup","summary":"can access: curator","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddSputnikDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupSputniksDto"}}}}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/groups/me":{"get":{"operationId":"GroupsController_getMyGroup","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupSputniksDto"}}}}}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/groups/{id}":{"get":{"operationId":"GroupsController_getGroupById","summary":"can access: sputnik, curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupSputniksDto"}}}}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/groups":{"get":{"operationId":"GroupsController_getGroupsByInstitute","summary":"can access: sputnik, curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupSputniksDto"}}}}}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/groups/{groupId}/sputniks/{userUuid}/detach":{"delete":{"operationId":"GroupsController_unbindSputnik","summary":"can access: curator","parameters":[{"name":"groupId","required":true,"in":"path","schema":{"type":"number"}},{"name":"userUuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Groups"],"security":[{"bearer":[]}]}},"/api/institutes":{"get":{"operationId":"InstitutesController_getInstitutes","summary":"can access: all","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/InstituteDto"}}}}}},"tags":["Institutes"],"security":[{"bearer":[]}]}},"/api/institutes/{id}/specialities":{"get":{"operationId":"SpecialtiesController_getByInstituteId","summary":"can access: curator","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SpecialityDto"}}}}}},"tags":["Specialities"],"security":[{"bearer":[]}]}},"/api/vk/check-push-permissions":{"post":{"operationId":"VkController_checkPushPermissions","summary":"can access: admin only","parameters":[],"responses":{"201":{"description":""}},"tags":["VK"],"security":[{"bearer":[]}]}},"/api/auth/vk/login":{"post":{"operationId":"AuthController_vkLogin","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VkAuthDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}}},"tags":["Auth"]}},"/api/auth/tg/login":{"post":{"operationId":"AuthController_tgLogin","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TgAuthDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}}},"tags":["Auth"]}},"/api/auth/refresh":{"post":{"operationId":"AuthController_refresh","parameters":[],"responses":{"201":{"description":""}},"tags":["Auth"]}},"/api/students/me/applications":{"post":{"operationId":"ApplicationsController_createApplication","summary":"Can access: student","parameters":[],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/RequestDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicationDto"}}}}},"tags":["Applications"],"security":[{"bearer":[]}]},"get":{"operationId":"ApplicationsController_getMyApplications","summary":"Can access: student","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"filter.status","required":false,"in":"query","description":"Filter by status query param.\n          <p>\n             <b>Format: </b> filter.status={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.achievement.(uuid)","required":false,"in":"query","description":"Filter by achievement.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.achievement.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.achievement.(uuid)=$not:$like:John Doe&filter.achievement.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> createdAt:DESC\n          </p>\n      <h4>Available Fields</h4><ul><li>createdAt</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["createdAt:ASC","createdAt:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/ApplicationDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{"status":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"achievement.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}}}}]}}}}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/students/me/applications/{uuid}":{"delete":{"operationId":"ApplicationsController_cancelApplication","summary":"Can access: student","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/students/{uuid}/applications":{"get":{"operationId":"ApplicationsController_getStudentsApplications","summary":"Can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}},{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"filter.status","required":false,"in":"query","description":"Filter by status query param.\n          <p>\n             <b>Format: </b> filter.status={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.achievement.(uuid)","required":false,"in":"query","description":"Filter by achievement.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.achievement.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.achievement.(uuid)=$not:$like:John Doe&filter.achievement.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> createdAt:DESC\n          </p>\n      <h4>Available Fields</h4><ul><li>createdAt</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["createdAt:ASC","createdAt:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/ApplicationDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{"status":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"achievement.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}}}}]}}}}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/applications/proof-files/{uuid}":{"get":{"operationId":"ApplicationsController_getProofFile","summary":"Can access: all","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/applications/{uuid}/approve":{"patch":{"operationId":"ApplicationsController_approve","summary":"Can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReviewDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApplicationDto"}}}}}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/applications/{uuid}/reject":{"patch":{"operationId":"ApplicationsController_reject","summary":"Can access: sputnik, curator","parameters":[{"name":"uuid","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReviewDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApplicationDto"}}}}}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/applications":{"get":{"operationId":"ApplicationsController_getAllApplications","summary":"Can access: sputnik, curator","parameters":[{"name":"page","required":false,"in":"query","description":"Page number to retrieve.If you provide invalid value the default page number will applied\n        <p>\n             <b>Example: </b> 1\n          </p>\n        <p>\n             <b>Default Value: </b> 1\n          </p>\n        ","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","description":"Number of records per page.\n      <p>\n             <b>Example: </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b> 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n          </p>\n\n      If provided value is greater than max value, max value will be applied.\n      ","schema":{"type":"number"}},{"name":"filter.status","required":false,"in":"query","description":"Filter by status query param.\n          <p>\n             <b>Format: </b> filter.status={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.achievement.(uuid)","required":false,"in":"query","description":"Filter by achievement.(uuid) query param.\n          <p>\n             <b>Format: </b> filter.achievement.(uuid)={$not}:OPERATION:VALUE\n          </p>\n          <p>\n             <b>Example: </b> filter.achievement.(uuid)=$not:$like:John Doe&filter.achievement.(uuid)=like:John\n          </p>\n          <h4>Available Operations</h4><ul><li>$eq</li>\n<li>$in</li></ul>","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","description":"Parameter to sort by.\n      <p>To sort by multiple fields, just provide query param multiple types. The order in url defines an order of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n          </p>\n      <p>\n             <b>Default Value: </b> createdAt:DESC\n          </p>\n      <h4>Available Fields</h4><ul><li>createdAt</li></ul>\n      ","schema":{"type":"array","items":{"type":"string","enum":["createdAt:ASC","createdAt:DESC"]}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDocumented"},{"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/ApplicationDto"}},"meta":{"properties":{"select":{"type":"array","items":{"type":"string"}},"filter":{"type":"object","properties":{"status":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"achievement.(uuid)":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}}}}}}]}}}}},"tags":["Applications"],"security":[{"bearer":[]}]}},"/api/me/user-settings":{"get":{"operationId":"UserSettingsController_get","summary":"can access: student","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSettingsDto"}}}}},"tags":["User settings"],"security":[{"bearer":[]}]},"patch":{"operationId":"UserSettingsController_update","summary":"can access: student","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserSettingsDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResult"}}}}},"tags":["User settings"],"security":[{"bearer":[]}]}},"/api/files/upload":{"post":{"operationId":"FilesController_uploadFile","parameters":[],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary","description":"PNG image file","example":"image.png"}},"required":["file"]}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"filename":{"type":"string"}}}}}}},"tags":["Files"],"security":[{"bearer":[]}]}},"/api/files/{filename}":{"get":{"operationId":"FilesController_getFile","parameters":[{"name":"filename","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"content":{"image/png":{}},"description":""}},"tags":["Files"]}},"/api/health/database":{"get":{"operationId":"HealthController_databaseCheck","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["Health"]}},"/api/health/redis":{"get":{"operationId":"HealthController_redisCheck","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["Health"]}},"/api/health/storage":{"get":{"operationId":"HealthController_StorageCheck","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["Health"]}},"/api/health/memory":{"get":{"operationId":"HealthController_memoryCheck","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["Health"]}},"/api/messaging-hub/bye-all":{"post":{"operationId":"MessagingHubController_sendTest","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushAllDto"}}}},"responses":{"201":{"description":""}},"security":[{"bearer":[]}]}},"/achievement-icons/:filename":{"get":{"contentType":"image/png","summary":"Returns the achievement icon","produces":["image/png"],"responses":{"200":{"description":"A PNG image file","content":{"image/png":{"schema":{"type":"string","format":"binary"}}}}}}}},"info":{"title":"SUAI Achievements","description":"","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"bearer":{"scheme":"bearer","bearerFormat":"JWT","type":"http"}},"schemas":{"PaginatedMetaDocumented":{"type":"object","properties":{"itemsPerPage":{"type":"number","title":"Number of items per page"},"totalItems":{"type":"number","title":"Total number of items"},"currentPage":{"type":"number","title":"Current requested page"},"totalPages":{"type":"number","title":"Total number of pages"},"sortBy":{"type":"array","title":"Sorting by columns","items":{"type":"array","items":{"oneOf":[{"type":"string"},{"type":"string","enum":["ASC","DESC"]}]}}},"searchBy":{"title":"Search by fields","type":"array","items":{"type":"string"}},"search":{"type":"string","title":"Search term"},"select":{"title":"List of selected fields","type":"array","items":{"type":"string"}},"filter":{"type":"object","title":"Filters that applied to the query"}},"required":["itemsPerPage","totalItems","currentPage","totalPages"]},"PaginatedLinksDocumented":{"type":"object","properties":{"first":{"type":"string","title":"Link to first page"},"previous":{"type":"string","title":"Link to previous page"},"current":{"type":"string","title":"Link to current page"},"next":{"type":"string","title":"Link to next page"},"last":{"type":"string","title":"Link to last page"}}},"PaginatedDocumented":{"type":"object","properties":{"data":{"title":"Array of entities","type":"array","items":{"type":"object"}},"meta":{"title":"Pagination Metadata","allOf":[{"$ref":"#/components/schemas/PaginatedMetaDocumented"}]},"links":{"title":"Links to pages","allOf":[{"$ref":"#/components/schemas/PaginatedLinksDocumented"}]}},"required":["data","meta","links"]},"AchievementDto":{"type":"object","properties":{"uuid":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["OPENED","HINTED","HIDDEN"]},"category":{"type":"string","enum":["PERSONAL","GROUP","URBAN","UNIVERSITY","EDUCATIONAL"]},"rarity":{"type":"string","enum":["RARE","COMMON","EPIC","LEGENDARY","HEROIC"]},"reward":{"type":"number"},"hiddenIconPath":{"type":"string"},"openedIconPath":{"type":"string"},"sputnikRequirement":{"type":"string"},"studentRequirement":{"type":"string"},"hint":{"type":"string"},"roflDescription":{"type":"string"}},"required":["uuid","type","category","rarity","hiddenIconPath"]},"InstituteDto":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"shortName":{"type":"string"},"number":{"type":"number"}},"required":["id","name","shortName","number"]},"UserDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"vkId":{"type":"string"},"role":{"type":"string"},"isBanned":{"type":"boolean"},"avatar":{"type":"string"}},"required":["uuid","firstName","lastName","institute","vkId","role","isBanned"]},"SpecialityDto":{"type":"object","properties":{"id":{"type":"number"},"code":{"type":"string"},"name":{"type":"string"},"shortName":{"type":"string"}},"required":["id","code","name","shortName"]},"GroupDto":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"speciality":{"$ref":"#/components/schemas/SpecialityDto"}},"required":["id","name","speciality"]},"StudentDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"vkId":{"type":"string"},"role":{"type":"string"},"isBanned":{"type":"boolean"},"avatar":{"type":"string"},"tgUserName":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupDto"},"balance":{"type":"number"}},"required":["uuid","firstName","lastName","institute","vkId","role","isBanned","tgUserName","group","balance"]},"AchievementOperationDto":{"type":"object","properties":{"type":{"type":"string","enum":["ISSUE","CANCEL"]},"achievement":{"$ref":"#/components/schemas/AchievementDto"},"executor":{"$ref":"#/components/schemas/UserDto"},"student":{"$ref":"#/components/schemas/StudentDto"},"cancellationReason":{"type":"string"},"createdAt":{"format":"date-time","type":"string"}},"required":["type","achievement","executor","student","createdAt"]},"IssuedAchievementDto":{"type":"object","properties":{"uuid":{"type":"string"},"achievement":{"$ref":"#/components/schemas/AchievementDto"},"issuer":{"$ref":"#/components/schemas/UserDto"},"student":{"$ref":"#/components/schemas/StudentDto"},"reward":{"type":"number"},"createdAt":{"format":"date-time","type":"string"},"updatedAt":{"format":"date-time","type":"string"}},"required":["uuid","achievement","issuer","student","reward","createdAt","updatedAt"]},"IssueAchievementDto":{"type":"object","properties":{"studentUuid":{"type":"string"},"achievementUuid":{"type":"string"}},"required":["studentUuid","achievementUuid"]},"CancelAchievementDto":{"type":"object","properties":{"studentUuid":{"type":"string"},"achievementUuid":{"type":"string"},"cancellationReason":{"type":"string"}},"required":["studentUuid","achievementUuid","cancellationReason"]},"MarkAsSeenDto":{"type":"object","properties":{"issuedAchievementUuids":{"type":"array","items":{"type":"array"}}},"required":["issuedAchievementUuids"]},"CreateStudentDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"vkId":{"type":"string"},"tgUserName":{"type":"string"},"instituteId":{"type":"number"},"groupId":{"type":"number"}},"required":["firstName","lastName","vkId","instituteId","groupId"]},"UpdateStudentDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"}}},"UpdateResult":{"type":"object","properties":{}},"UserSettingsDto":{"type":"object","properties":{"isVisibleInTop":{"type":"boolean","description":"If false, it is not shown in students rating"},"showUnseenAchievements":{"type":"boolean","description":"If false, achievements that have not been viewed won't be displayed."},"receiveTgAchievementNotifications":{"type":"boolean","description":"If true, users receive notifications via Telegram."},"receiveVkAchievementNotifications":{"type":"boolean","description":"If true, users receive notifications via VK."},"updatedAt":{"format":"date-time","type":"string","description":"The date and time when the settings was last updated."}},"required":["isVisibleInTop","showUnseenAchievements","receiveTgAchievementNotifications","receiveVkAchievementNotifications","updatedAt"]},"StudentWithSettingsDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"vkId":{"type":"string"},"role":{"type":"string"},"isBanned":{"type":"boolean"},"avatar":{"type":"string"},"tgUserName":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupDto"},"balance":{"type":"number"},"userSettings":{"$ref":"#/components/schemas/UserSettingsDto"}},"required":["uuid","firstName","lastName","institute","vkId","role","isBanned","tgUserName","group","balance","userSettings"]},"TopStudentDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"group":{"$ref":"#/components/schemas/GroupDto"},"avatar":{"type":"string"},"balance":{"type":"number"}},"required":["balance"]},"RankDto":{"type":"object","properties":{"rank":{"type":"number"},"total":{"type":"number"}},"required":["rank","total"]},"AllRanksDto":{"type":"object","properties":{"groupRank":{"$ref":"#/components/schemas/RankDto"},"instituteRank":{"$ref":"#/components/schemas/RankDto"},"universityRank":{"$ref":"#/components/schemas/RankDto"}},"required":["groupRank","instituteRank","universityRank"]},"CreateSputnikDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"vkId":{"type":"string"},"tgUserName":{"type":"string"},"instituteId":{"type":"number"},"groupIds":{"example":[0,1],"type":"array","items":{"type":"array"}}},"required":["firstName","lastName","vkId","instituteId","groupIds"]},"SputnikDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"vkId":{"type":"string"},"role":{"type":"string"},"isBanned":{"type":"boolean"},"avatar":{"type":"string"},"sputnikGroups":{"type":"array","items":{"$ref":"#/components/schemas/GroupDto"}}},"required":["uuid","firstName","lastName","institute","vkId","role","isBanned","sputnikGroups"]},"UpdateSputnikDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"}},"required":["firstName","lastName","patronymic"]},"CreateCuratorDto":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"vkId":{"type":"string"},"tgUserName":{"type":"string"},"instituteId":{"type":"number"}},"required":["firstName","lastName","vkId","instituteId"]},"CuratorDto":{"type":"object","properties":{"uuid":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"patronymic":{"type":"string"},"institute":{"$ref":"#/components/schemas/InstituteDto"},"vkId":{"type":"string"},"role":{"type":"string"},"isBanned":{"type":"boolean"},"avatar":{"type":"string"}},"required":["uuid","firstName","lastName","institute","vkId","role","isBanned"]},"CreateGroupDto":{"type":"object","properties":{"name":{"type":"string"},"instituteId":{"type":"number"},"specialityId":{"type":"number"}},"required":["name","instituteId","specialityId"]},"AddSputnikDto":{"type":"object","properties":{"sputnikUuid":{"type":"string"},"groupId":{"type":"number"}},"required":["sputnikUuid","groupId"]},"GroupSputniksDto":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"speciality":{"$ref":"#/components/schemas/SpecialityDto"},"sputniks":{"type":"array","items":{"$ref":"#/components/schemas/SputnikDto"}},"studentsCount":{"type":"number"}},"required":["id","name","speciality","sputniks","studentsCount"]},"VkAuthDto":{"type":"object","properties":{"launchParams":{"type":"string"},"sign":{"type":"string"}},"required":["launchParams","sign"]},"AuthResponseDto":{"type":"object","properties":{"accessToken":{"type":"string"},"role":{"type":"string","enum":["ADMIN","CURATOR","SPUTNIK","STUDENT"]}},"required":["accessToken","role"]},"TgAuthDto":{"type":"object","properties":{"initData":{"type":"string"}},"required":["initData"]},"RequestDto":{"type":"object","properties":{"achievementUuid":{"type":"string"},"message":{"type":"string"}},"required":["achievementUuid"]},"ProofFileDto":{"type":"object","properties":{"uuid":{"type":"string"},"type":{"type":"string"},"mimetype":{"type":"string"},"size":{"type":"number"},"fileName":{"type":"string"}},"required":["uuid","type","mimetype","size","fileName"]},"ApplicationDto":{"type":"object","properties":{"uuid":{"type":"string"},"student":{"$ref":"#/components/schemas/StudentDto"},"reviewer":{"$ref":"#/components/schemas/UserDto"},"achievementUuid":{"type":"string"},"message":{"type":"string"},"status":{"type":"string","enum":["PENDING","APPROVED","REJECTED","CANCELED"]},"proofFiles":{"type":"array","items":{"$ref":"#/components/schemas/ProofFileDto"}},"response":{"type":"string"},"createdAt":{"format":"date-time","type":"string"},"updatedAt":{"format":"date-time","type":"string"}},"required":["uuid","student","achievementUuid","status","proofFiles","createdAt","updatedAt"]},"ReviewDto":{"type":"object","properties":{"response":{"type":"string"}}},"UpdateUserSettingsDto":{"type":"object","properties":{"isVisibleInTop":{"type":"boolean"},"showUnseenAchievements":{"type":"boolean"},"receiveTgAchievementNotifications":{"type":"boolean"},"receiveVkAchievementNotifications":{"type":"boolean"}},"required":["isVisibleInTop","showUnseenAchievements","receiveTgAchievementNotifications","receiveVkAchievementNotifications"]},"PushAllDto":{"type":"object","properties":{"testUsers":{"type":"array","items":{"type":"string"}},"mode":{"type":"string","default":"TEST"}},"required":["testUsers","mode"]}}}}